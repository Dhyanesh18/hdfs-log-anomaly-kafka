version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  topic-init:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - kafka
    entrypoint: ["/bin/sh", "-c"]
    command: |
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic aggregated_events --partitions 1 --replication-factor 1
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic anomalies --partitions 1 --replication-factor 1
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic hdfs_logs --partitions 1 --replication-factor 1

  aggregate-consumer:
    build: ./docker
    command: ["python", "services/aggregate_consumer.py"]
    depends_on:
      - kafka
    volumes:
      - ./services:/app/services
      - ./utils:/app/utils
      - ./models:/app/models
      - ./preprocessed:/app/preprocessed

  inference:
    build: ./docker
    command: ["python", "services/inference.py"]
    depends_on:
      - kafka
    volumes:
      - ./services:/app/services
      - ./utils:/app/utils
      - ./models:/app/models
      - ./preprocessed:/app/preprocessed

  retrainer:
    build: ./docker
    command: ["python", "services/retrainer.py"]
    depends_on:
      - kafka
    volumes:
      - ./services:/app/services
      - ./utils:/app/utils
      - ./models:/app/models
      - ./preprocessed:/app/preprocessed

  raw-producer:
    build: ./docker
    command: ["python", "services/raw_producer.py"]
    depends_on:
      - kafka
    volumes:
      - ./services:/app/services
      - ./utils:/app/utils
      - ./models:/app/models
      - ./preprocessed:/app/preprocessed

  labelled-producer:
    build: ./docker
    command: ["python", "services/labelled_producer.py"]
    depends_on:
      - kafka
    volumes:
      - ./services:/app/services
      - ./utils:/app/utils
      - ./models:/app/models
      - ./preprocessed:/app/preprocessed
